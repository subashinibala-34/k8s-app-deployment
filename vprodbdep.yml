apiVersion: apps/v1
kind: Deployment
metadata:
  name: vprodb
  labels:
    app: vprodb
spec:
  selector:
    matchLabels:
      app: vprodb
  replicas: 1
  template:
    metadata:
      labels:
        app: vprodb
    spec:
      containers:
      - name: vprodb
        image: subashinibala/vprofiledb
          #args:
          #- "--ignore-db-dir"
          #- "lost+found"
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: vpro-db-data
        ports:
        - name: vprodb-port
          containerPort: 3306
        env:
         - name: MYSQL_ROOT_PASSWORD
           valueFrom:
             secretKeyRef:
               name: app-secret
               key: db-pass
      nodeSelector:
        zone: us-east-1a
      volumes:
        - name: vpro-db-data
          # This AWS EBS volume must already exist.
          awsElasticBlockStore:
             volumeID: vol-0364ddbc3dd29b272
             fsType: ext4

      #initContainers:
        #- name: busybox
          #image: busybox:latest
         # args: ["rm", "-rf", "/var/lib/mysql/lost+found"]
        #  volumeMounts:
       #     - name: vpro-db-data
      #        mountPath: /var/lib/mysql
      
      initContainers:
        - name: init-mydb
          image: busybox
          command: ['sh','-c', 'until nslookup vprodb.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done;']
        - name: init-memcache
          image: busybox
          command: [ 'sh','-c', 'until nslookup vprocache01.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done;' ]        